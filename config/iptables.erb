<% if IpAccessWriter.os_type == "rpm" %>
*filter
:INPUT ACCEPT [0:0]
:FORWARD ACCEPT [0:0]
:OUTPUT ACCEPT [0:0]
:RH-Firewall-1-INPUT - [0:0]
-A INPUT -j RH-Firewall-1-INPUT
-A FORWARD -j RH-Firewall-1-INPUT
-A RH-Firewall-1-INPUT -p icmp --icmp-type ping -j ACCEPT
-A RH-Firewall-1-INPUT -i lo -j ACCEPT
-A RH-Firewall-1-INPUT -i eth0 -j ACCEPT
-A RH-Firewall-1-INPUT -m state --state ESTABLISHED,RELATED -j ACCEPT
-A RH-Firewall-1-INPUT -m state --state NEW -m tcp -p tcp --src 128.91.211.0/255.255.255.0 --dport 22 -j ACCEPT
-A RH-Firewall-1-INPUT -m state --state NEW -m tcp -p tcp --src 165.123.243.41/255.255.255.255 --dport 22 -j ACCEPT
-A RH-Firewall-1-INPUT -m state --state NEW -m tcp -p tcp --src 128.91.211.0/255.255.255.0 --dport 80 -j ACCEPT
-A RH-Firewall-1-INPUT -m state --state NEW -m tcp -p tcp --src 165.123.243.41/255.255.255.255 --dport 80 -j ACCEPT
-A RH-Firewall-1-INPUT -m state --state NEW -m tcp -p tcp --src 128.91.211.0/255.255.255.0 --dport 3000 -j ACCEPT
-A RH-Firewall-1-INPUT -m state --state NEW -m tcp -p tcp --src 165.123.243.41/255.255.255.255 --dport 5666 -j ACCEPT


#Addresses added from EC2
<% ip_array.each do |i| %>

-A RH-Firewall-1-INPUT -m state --state NEW -m tcp -p tcp --src <%= i %>/255.255.255.255 --dport 80 -j ACCEPT
-A RH-Firewall-1-INPUT -m state --state NEW -m tcp -p tcp --src <%= i %>/255.255.255.255 --dport 5671:5672 -j ACCEPT

<% end %>
#End of EC2 block

-A RH-Firewall-1-INPUT -j REJECT --reject-with icmp-host-prohibited
COMMIT

#Completed

<% elsif IpAccessWriter.os_type == "debian" %>
#!/bin/sh

iptables -A INPUT -p icmp --icmp-type ping -j ACCEPT
iptables -A INPUT -i lo -j ACCEPT
iptables -A INPUT -i eth0 -j ACCEPT
iptables -A INPUT -m state --state ESTABLISHED,RELATED -j ACCEPT
iptables -A INPUT -m state --state NEW -m tcp -p tcp --src 128.91.211.0/255.255.255.0 --dport 22 -j ACCEPT
iptables -A INPUT -m state --state NEW -m tcp -p tcp --src 165.123.243.41/255.255.255.255 --dport 22 -j ACCEPT
iptables -A INPUT -m state --state NEW -m tcp -p tcp --src 128.91.211.0/255.255.255.0 --dport 80 -j ACCEPT
iptables -A INPUT -m state --state NEW -m tcp -p tcp --src 165.123.243.41/255.255.255.255 --dport 80 -j ACCEPT
iptables -A INPUT -m state --state NEW -m tcp -p tcp --src 128.91.211.0/255.255.255.0 --dport 3000 -j ACCEPT
iptables -A INPUT -m state --state NEW -m tcp -p tcp --src 165.123.243.41/255.255.255.255 --dport 5666 -j ACCEPT


#Addresses added from EC2
<% ip_array.each do |i| %>

iptables -A INPUT -m state --state NEW -m tcp -p tcp --src <%= i %>/255.255.255.255 --dport 80 -j ACCEPT
iptables -A INPUT -m state --state NEW -m tcp -p tcp --src <%= i %>/255.255.255.255 --dport 5671:5672 -j ACCEPT

<% end %>
#End of EC2 block

iptables -A INPUT -j REJECT --reject-with icmp-host-prohibited

<% else %>

##
# TODO: Currently, support is not built into QIPS to manage the firewall
# for this operating system.  Leaving port 80 wide open for AWS clients to report
# back to the webserver is the best course of action.
# Please feel free to contact us if you think we should support this OS:
# itmat.apps AT itmat DOT upenn DOT edu
##

<% end %>
